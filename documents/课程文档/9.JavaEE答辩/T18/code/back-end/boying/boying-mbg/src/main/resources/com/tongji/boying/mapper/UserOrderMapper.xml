<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tongji.boying.mapper.UserOrderMapper">
    <resultMap id="BaseResultMap" type="com.tongji.boying.model.UserOrder">
        <id column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="show_id" jdbcType="INTEGER" property="showId"/>
        <result column="show_session_id" jdbcType="INTEGER" property="showSessionId"/>
        <result column="address_id" jdbcType="INTEGER" property="addressId"/>
        <result column="frequent_id" jdbcType="INTEGER" property="frequentId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="payment" jdbcType="VARCHAR" property="payment"/>
        <result column="user_delete" jdbcType="BIT" property="userDelete"/>
        <result column="money" jdbcType="DOUBLE" property="money"/>
        <result column="ticket_count" jdbcType="INTEGER" property="ticketCount"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        order_id, user_id, show_id, show_session_id, address_id, frequent_id, status, time,
    payment, user_delete, money, ticket_count
    </sql>
    <select id="selectByExample" parameterType="com.tongji.boying.model.UserOrderExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_order
        where order_id = #{orderId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user_order
        where order_id = #{orderId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.tongji.boying.model.UserOrderExample">
        delete from user_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.tongji.boying.model.UserOrder" keyProperty="orderId"
            keyColumn="order_id" useGeneratedKeys="true">
        insert into user_order (order_id, user_id, show_id,
                                show_session_id, address_id, frequent_id,
                                status, time, payment,
                                user_delete, money, ticket_count)
        values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{showId,jdbcType=INTEGER},
                #{showSessionId,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, #{frequentId,jdbcType=INTEGER},
                #{status,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{payment,jdbcType=VARCHAR},
                #{userDelete,jdbcType=BIT}, #{money,jdbcType=DOUBLE}, #{ticketCount,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.tongji.boying.model.UserOrder">
        insert into user_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="showId != null">
                show_id,
            </if>
            <if test="showSessionId != null">
                show_session_id,
            </if>
            <if test="addressId != null">
                address_id,
            </if>
            <if test="frequentId != null">
                frequent_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="payment != null">
                payment,
            </if>
            <if test="userDelete != null">
                user_delete,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="ticketCount != null">
                ticket_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="showId != null">
                #{showId,jdbcType=INTEGER},
            </if>
            <if test="showSessionId != null">
                #{showSessionId,jdbcType=INTEGER},
            </if>
            <if test="addressId != null">
                #{addressId,jdbcType=INTEGER},
            </if>
            <if test="frequentId != null">
                #{frequentId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="payment != null">
                #{payment,jdbcType=VARCHAR},
            </if>
            <if test="userDelete != null">
                #{userDelete,jdbcType=BIT},
            </if>
            <if test="money != null">
                #{money,jdbcType=DOUBLE},
            </if>
            <if test="ticketCount != null">
                #{ticketCount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.tongji.boying.model.UserOrderExample" resultType="java.lang.Long">
        select count(*) from user_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_order
        <set>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.showId != null">
                show_id = #{record.showId,jdbcType=INTEGER},
            </if>
            <if test="record.showSessionId != null">
                show_session_id = #{record.showSessionId,jdbcType=INTEGER},
            </if>
            <if test="record.addressId != null">
                address_id = #{record.addressId,jdbcType=INTEGER},
            </if>
            <if test="record.frequentId != null">
                frequent_id = #{record.frequentId,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.payment != null">
                payment = #{record.payment,jdbcType=VARCHAR},
            </if>
            <if test="record.userDelete != null">
                user_delete = #{record.userDelete,jdbcType=BIT},
            </if>
            <if test="record.money != null">
                money = #{record.money,jdbcType=DOUBLE},
            </if>
            <if test="record.ticketCount != null">
                ticket_count = #{record.ticketCount,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_order
        set order_id = #{record.orderId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        show_id = #{record.showId,jdbcType=INTEGER},
        show_session_id = #{record.showSessionId,jdbcType=INTEGER},
        address_id = #{record.addressId,jdbcType=INTEGER},
        frequent_id = #{record.frequentId,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER},
        time = #{record.time,jdbcType=TIMESTAMP},
        payment = #{record.payment,jdbcType=VARCHAR},
        user_delete = #{record.userDelete,jdbcType=BIT},
        money = #{record.money,jdbcType=DOUBLE},
        ticket_count = #{record.ticketCount,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tongji.boying.model.UserOrder">
        update user_order
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="showId != null">
                show_id = #{showId,jdbcType=INTEGER},
            </if>
            <if test="showSessionId != null">
                show_session_id = #{showSessionId,jdbcType=INTEGER},
            </if>
            <if test="addressId != null">
                address_id = #{addressId,jdbcType=INTEGER},
            </if>
            <if test="frequentId != null">
                frequent_id = #{frequentId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="payment != null">
                payment = #{payment,jdbcType=VARCHAR},
            </if>
            <if test="userDelete != null">
                user_delete = #{userDelete,jdbcType=BIT},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DOUBLE},
            </if>
            <if test="ticketCount != null">
                ticket_count = #{ticketCount,jdbcType=INTEGER},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tongji.boying.model.UserOrder">
        update user_order
        set user_id         = #{userId,jdbcType=INTEGER},
            show_id         = #{showId,jdbcType=INTEGER},
            show_session_id = #{showSessionId,jdbcType=INTEGER},
            address_id      = #{addressId,jdbcType=INTEGER},
            frequent_id     = #{frequentId,jdbcType=INTEGER},
            status          = #{status,jdbcType=INTEGER},
            time            = #{time,jdbcType=TIMESTAMP},
            payment         = #{payment,jdbcType=VARCHAR},
            user_delete     = #{userDelete,jdbcType=BIT},
            money           = #{money,jdbcType=DOUBLE},
            ticket_count    = #{ticketCount,jdbcType=INTEGER}
        where order_id = #{orderId,jdbcType=INTEGER}
    </update>
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tongji.boying.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.tongji.boying.model.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="identity_number" jdbcType="VARCHAR" property="identityNumber"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="gender" jdbcType="BIT" property="gender"/>
        <result column="userStatus" jdbcType="BIT" property="userstatus"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="default_frequent" jdbcType="INTEGER" property="defaultFrequent"/>
        <result column="default_address" jdbcType="INTEGER" property="defaultAddress"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user_id, username, phone, password, real_name, identity_number, email, age, gender,
    userStatus, icon, default_frequent, default_address, create_time
    </sql>
    <select id="selectByExample" parameterType="com.tongji.boying.model.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.tongji.boying.model.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.tongji.boying.model.User">
        insert into user (user_id, username, phone,
                          password, real_name, identity_number,
                          email, age, gender, userStatus,
                          icon, default_frequent, default_address,
                          create_time)
        values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{identityNumber,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{gender,jdbcType=BIT}, #{userstatus,jdbcType=BIT},
                #{icon,jdbcType=VARCHAR}, #{defaultFrequent,jdbcType=INTEGER}, #{defaultAddress,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.tongji.boying.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="identityNumber != null">
                identity_number,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="userstatus != null">
                userStatus,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="defaultFrequent != null">
                default_frequent,
            </if>
            <if test="defaultAddress != null">
                default_address,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="identityNumber != null">
                #{identityNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=BIT},
            </if>
            <if test="userstatus != null">
                #{userstatus,jdbcType=BIT},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="defaultFrequent != null">
                #{defaultFrequent,jdbcType=INTEGER},
            </if>
            <if test="defaultAddress != null">
                #{defaultAddress,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.tongji.boying.model.UserExample" resultType="java.lang.Long">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.realName != null">
                real_name = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.identityNumber != null">
                identity_number = #{record.identityNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=BIT},
            </if>
            <if test="record.userstatus != null">
                userStatus = #{record.userstatus,jdbcType=BIT},
            </if>
            <if test="record.icon != null">
                icon = #{record.icon,jdbcType=VARCHAR},
            </if>
            <if test="record.defaultFrequent != null">
                default_frequent = #{record.defaultFrequent,jdbcType=INTEGER},
            </if>
            <if test="record.defaultAddress != null">
                default_address = #{record.defaultAddress,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set user_id = #{record.userId,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        real_name = #{record.realName,jdbcType=VARCHAR},
        identity_number = #{record.identityNumber,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        gender = #{record.gender,jdbcType=BIT},
        userStatus = #{record.userstatus,jdbcType=BIT},
        icon = #{record.icon,jdbcType=VARCHAR},
        default_frequent = #{record.defaultFrequent,jdbcType=INTEGER},
        default_address = #{record.defaultAddress,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tongji.boying.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="identityNumber != null">
                identity_number = #{identityNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=BIT},
            </if>
            <if test="userstatus != null">
                userStatus = #{userstatus,jdbcType=BIT},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="defaultFrequent != null">
                default_frequent = #{defaultFrequent,jdbcType=INTEGER},
            </if>
            <if test="defaultAddress != null">
                default_address = #{defaultAddress,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tongji.boying.model.User">
        update user
        set username         = #{username,jdbcType=VARCHAR},
            phone            = #{phone,jdbcType=VARCHAR},
            password         = #{password,jdbcType=VARCHAR},
            real_name        = #{realName,jdbcType=VARCHAR},
            identity_number  = #{identityNumber,jdbcType=VARCHAR},
            email            = #{email,jdbcType=VARCHAR},
            age              = #{age,jdbcType=INTEGER},
            gender           = #{gender,jdbcType=BIT},
            userStatus       = #{userstatus,jdbcType=BIT},
            icon             = #{icon,jdbcType=VARCHAR},
            default_frequent = #{defaultFrequent,jdbcType=INTEGER},
            default_address  = #{defaultAddress,jdbcType=INTEGER},
            create_time      = #{createTime,jdbcType=TIMESTAMP}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
</mapper>
